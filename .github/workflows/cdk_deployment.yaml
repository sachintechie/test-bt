name: CDK Deploy Pipeline

on:
  push:
    branches:
      - main
      - dev
      - staging
      - prod
      - schoolhack-dev
      - schoolhack-prod


jobs:
  cdk-deploy-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Set up AWS credentials for dev
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ secrets.AWS_REGION_DEV }}

      - name: Install dependencies
        run: npm install

      - name: Deploy to dev
        env:
          CDK_ENV: 'dev'
        run: npx cdk deploy --context env=dev --all --require-approval never

  cdk-deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Set up AWS credentials for staging
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          aws-region: ${{ secrets.AWS_REGION_STAGING }}

      - name: Install dependencies
        run: npm install

      - name: Deploy to staging
        env:
          CDK_ENV: 'staging'
        run: npx cdk deploy --context env=staging --all --require-approval never

  cdk-deploy-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/prod'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Set up AWS credentials for prod
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ${{ secrets.AWS_REGION_PROD }}

      - name: Install dependencies
        run: npm install

      - name: Deploy to prod
        env:
          CDK_ENV: 'prod'
        run: npx cdk deploy --context env=prod --all --require-approval never

  cdk-deploy-schoolhack-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/schoolhack-dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Set up AWS credentials for schoolhack-dev
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_SCHOOLHACK_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SCHOOLHACK_DEV }}
          aws-region: ${{ secrets.AWS_REGION_SCHOOLHACK_DEV }}

      - name: Install dependencies
        run: npm install

      - name: Bootstrap the CDK
        env:
          CDK_ENV: 'schoolhack-dev'
        run: npx cdk bootstrap

      - name: Deploy to schoolhack-dev
        env:
          CDK_ENV: 'schoolhack-dev'
        run: npx cdk deploy --context env=schoolhack-dev --all --require-approval never   
  cdk-deploy-schoolhack-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/schoolhack-prod'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Set up AWS credentials for schoolhack-prod
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_SCHOOLHACK_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SCHOOLHACK_DEV }}
          aws-region: ${{ secrets.AWS_REGION_SCHOOLHACK_DEV }}

      - name: Install dependencies
        run: npm install

      - name: Deploy to schoolhack-prod
        env:
          CDK_ENV: 'schoolhack-prod'
        run: npx cdk deploy --context env=schoolhack-prod --all --require-approval never
