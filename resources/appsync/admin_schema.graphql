
type SignIn {
  status: Int
  data: SignInData
  error: AWSJSON
}

type SignInData {
  id: String
  createdat: String
  tenantuserid: String
  tenantid: String
  emailid: String
}


input SigninInput {
  tenantUserId: String!
}


type AdminTransfer {
  status: Int
  data: AdminTransferData
  error: AWSJSON
}

type AdminTransferData {
  adminuserid: String
  walletaddress: String
  receiverwalletaddress: String
  chaintype: String
  txhash: String
  symbol: String
  amount: Float
  createdat: String
  tokenid: String
  status: String
  transactionid: String
  network: String
  tenanttransactionid: String
}



input AdminTransferInput {
  senderWalletAddress: String!
  recipients: [AdminRecipient]!
  symbol: String!
  chainType: String!
  adminUserId: String!
  tenantTransactionId: String!
}

input CreateWalletInput {
  tenantUserId: String!
  chainType: String!
}

type GetWallet {
  status: Int
  data: GetWalletData
  error: AWSJSON
}

type GetWalletData {
  customerid: String
  walletaddress: String
  createdat: String
  chaintype: String
  tenantuserid: String
  tenantid: String
  emailid: String
}

input AdminRecipient {
  walletAddress: String
  amount: Float
}

type ListWalletTransactions {
  status: Int
  data: [TransactionData]
  error: AWSJSON
}

type TransactionData {
  customerid: String
  walletaddress: String
  receiverwalletaddress: String
  chaintype: String
  txhash: String
  symbol: String
  amount: Float
  createdat: String
  tokenid: String
  tenantuserid: String
  status: String
  callbackstatus: String
  id: String
  network: String
  tenanttransactionid: String
}
input ListWalletTokenInput {
  walletAddress: String!
}

input GetAdminTransactionInput {
tenantTransactionId: String!
}

input GetAdminWalletBalanceInput {
  walletAddress: String!
  symbol: String
}

type GetAdminWalletBalance {
  status: Int
  data: [GetAdminWalletBalanceData]
  error: AWSJSON
}

type GetAdminWalletBalanceData {
  customerid: String!
  walletaddress: String!
  symbol: String
  createdat: String
  chaintype: String
  contractaddress: String
  balance: Float
  tokenname: String
}

type Query {
  AdminSignin(input: SigninInput): SignIn
  CreateAdminWallet(input: CreateWalletInput): GetWallet
  ListWalletAdminTransactions(input: ListWalletTokenInput): ListWalletTransactions
  GetAdminTransactionById(input: GetAdminTransactionInput): ListWalletTransactions
  GetAdminWalletBalance(input: GetAdminWalletBalanceInput): GetAdminWalletBalance

}

type Mutation {
  AdminTransfer(input: AdminTransferInput): AdminTransfer
  CreateTokenAccount(input: AdminTransferInput): AdminTransfer

}

schema {
  query: Query
  mutation: Mutation
}


